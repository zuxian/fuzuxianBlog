(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{586:function(s,n,a){"use strict";a.r(n);var e=a(13),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-setup"}},[s._v("#")]),s._v(" 1. setup()")]),s._v(" "),a("p",[a("code",[s._v("setup()")]),s._v("是在组件"),a("code",[s._v("created()")]),s._v("之前执行的，所以在"),a("code",[s._v("setup()")]),s._v("内部无法获取"),a("code",[s._v("this")])]),s._v(" "),a("ul",[a("li",[s._v("参数一：props")])]),s._v(" "),a("p",[s._v("组件接收的"),a("code",[s._v("props")]),s._v("数据可以在"),a("code",[s._v("setup()")]),s._v("函数内访问到")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export default {\n  props: { title: String },\n  setup(props) { console.log(props.title) }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("props 具有响应性，不能使用 ES6 解构它，这会使其失去响应性。如果需要解构，可以使用 toRefs()")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const { title } = toRefs(props)\nconsole.log(title.value)\n\n// 如果 title 是一个可选的属性，需使用 toRef()\nimport { toRef } from 'vue'\nsetup(props) {\n\tconst title = toRef(props, 'title')\n\tconsole.log(title.value)\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("参数二：context：")])]),s._v(" "),a("p",[a("code",[s._v("context")]),s._v(" 是一个上下文对象，可以通过 context 来访问 Vue 的实力 this。\n"),a("code",[s._v("context")]),s._v(" 内部包括三个属性："),a("code",[s._v("attrs")]),s._v("、"),a("code",[s._v("slots")]),s._v("、"),a("code",[s._v("emit")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("export default {\n  setup(props, { attrs, slots, emit }) {  ... }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("context 是一个常规的 js 对象，它不具有响应性可以直接对它解构。")]),s._v(" "),a("p",[s._v("但 attrs 和 slots 是有状态的对象，当组件本身更新时它们也会随之更新，避免解构")]),s._v(" "),a("h2",{attrs:{id:"_2-computed"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-computed"}},[s._v("#")]),s._v(" 2. computed()")]),s._v(" "),a("ul",[a("li",[s._v("computed()创建只读计算属性")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const count = ref(1)\n// 创建一个只读性计算属性，依赖于count值\nconst plusOne = computed(() => count.value + 1)\nconsole.log(plusOne.value) // 2\nplusOne.value++ // error 该计算属性为只读属性，不可写\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("computed()创建可读写计算属性")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 注意使用的时候引入computed\nimport { ref, computed} from 'vue'\nexport default {\n  name: 'Test',\n  setup(){ \n    const baby = ref('嘎嘎嘎')  // 定义一个响应式数据\n    const age = ref(28)\n    // computed传入回调函数\n    const areYouSureYouAreABaby = computed(() => {return `${baby.value}`})\n    // set和get方式\n    const setAge= computed({\n      get() { return age.value + 10 },\n      set(v) {  age.value = v - 10 }\n    })\n   // 对比vue2.0\n   /*\n   computed: {\n      areYouSureYouAreABaby (){ return `${baby.value}` },\n      setAge:{\n        get(){ return age + 10 },\n        set(v) { age = v - 10  }\n      }\n    }\n  */\n    return { baby, age, areYouSureYouAreABaby }\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br")])]),a("h2",{attrs:{id:"_3-watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-watch"}},[s._v("#")]),s._v(" 3. watch()")]),s._v(" "),a("p",[s._v("watch()监听多个数据源，第一个参数中，要监听的数据源以数组的形式传入。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { ref, watch } from 'vue' \nconst count = ref(0) \nconst count2 = ref(1) \nwatch([count,count2],([newCount,newCount2],[oldCount,oldCount2])=>{})\n//还有第二种写法\nwatch([count, count2], (newValue, oldVlaue) => {\n    console.log(newValue)  //[newCount, newCount2]\n    console.log(oldValue)  //[oldCount, oldCount2]\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("watch 有三个参数：第一个是个getter（所谓getter写法就是你要写个getter函数,\n第二个是个回调函数，第三个是个options(这个参数是放vue2.0的deep或者immediate等可选项)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import { ref, watch, watchEffect } from 'vue' // 使用需要引入watch\nexport default {\n  name: 'Test',\n  setup(){\n    const baby = ref('嘎嘎嘎')\n    const arr = ref(['翠花', '小红'])\n\n    // 监听一个值的情况，有两种方式 ||||  第一种：直接放ref\n    watch(baby, () => `${baby.value}`)\n    // 第二种：放ref的value值\n    watch(() => baby.value, () => `${baby.value}`)\n  \n    // 监听多个值的时候 ,第一个参数是个数组，里面放监听的元素\n    watch([baby, arr], (v, o) => { \n     // 这里的v,o也是数组，所以你取值的时候v[0],v[1]拿到第几个元素的变化\n     ...\n    }, { deep: true, immediate: true })\n \n    // 或者写成\n    watch([baby,arr], ([baby, arr], [prebaby,prearr]) => { ... })\n    // 对比vue2.0\n    /*\n    watch: {\n      baby(v, o) {},\n      arr: {\n        handle(v,o) {},\n        deep: true,\n        immediate: true,\n        flush: 'pre' // 这个默认有三个参数，'pre'| 'post' | 'sync'，默认‘pre’组件更新前运行,'post'组件渲染完毕后执行，一般用于你需要去访问$ref的时候可以用这个，'sync'是一旦你的值改变你需要同步执行回调的时候用这个\n      }\n    }\n    */\n    return {baby,areYouSureYouAreABaby,data }\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("h2",{attrs:{id:"vue3-0-watcheffect-用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue3-0-watcheffect-用法"}},[s._v("#")]),s._v(" vue3.0 watchEffect 用法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import { defineComponent, ref, reactive, toRefs, watchEffect } from"vue";  \nexportdefault defineComponent({  \n setup() {  \n   const state = reactive({nickname: "xiaofan", age: 20});  \n   let year = ref(0)  \n   setInterval(() =>{ state.age++; year.value++ },1000)  \n   watchEffect(() => { console.log(state); console.log(year); });  \n   return { ...toRefs(state) }\n },  \n});\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("执行结果首先打印一次state和year值；然后每隔一秒，打印state和year值")]),s._v(" "),a("p",[s._v("watchEffect会自动收集依赖, 只要指定一个回调函数。在组件初始化时，会先执行一次来收集依赖，然后当收集到的依赖中数据发生变化时，就会再次执行回调函数。")]),s._v(" "),a("ol",[a("li",[s._v("watchEffect 不需要手动传入依赖")]),s._v(" "),a("li",[s._v("watchEffect 会先执行一次用来自动收集依赖")]),s._v(" "),a("li",[s._v("watchEffect 无法获取到变化前的值， 只能获取变化后的值")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("  //  watchEffect 有两个参数，一个是副作用函数(就是外部的数据对这个函数产生影响的，通俗点说就是在这个函数内部使用了外面的变量等)，一个是options()\n//  在vue2.0中，我们一般在created里添加一些监听事件，比如你的$bus的一些事件监听，在setup中就可以在这个里面写\nwatchEffect((onInvalidate) => {\n   // 这里的变化就相当于依赖了age.value，如果age变化了就会触发这个监听\n   // 刚刚创建组件的时候会立即执行这个 \n   const _age= `her age is ${age.value}`\n   console.log(_age)\n   //有时候你需要在这里挂载一些监听事件\n   const handerClick = ()=>{}\n   document.addEventlistener('click', handerClick)\n   // 在vue2.0我们需要在destroy的时候remove它，这里提供了一个方法onInvalidate回调解决remove的问题\n   onInvalidate(()=>{\n       /*\n        执行时机:  在副作用即将重新执行时，就是在每次执行这个watchEffect回调的时候会先执行这个,\n        如果在setup()或生命周期钩子函数中使用watchEffect, 则在卸载组件时执行此函数。\n       */\n       document.removeEventListener('click',handerClick )\n    })  \n})\n// 这个也是支持async,await的\nconst data = ref(null)\nwatchEffect(async onInvalidate => {\n // 假设个接口获取数据的\n  data.value = await fetchData()\n  onInvalidate(() => {...})\n})\n// 再来理解options：这里有三个参数flush,onTrigger,onTrack\nwatchEffect(onInvalidate => { onInvalidate(() => {...})}, {\n  flush: 'pre',      // 跟watch一样，默认pre，组件更新前去调用\n  onTrigger(e) {},  // 依赖项变化时候触发这个即依赖项的set触发的时候\n  onTrack(e) {}    // 依赖项被调用的时候触发这个即依赖项的get触发的时候\n})\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);