(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{558:function(s,n,t){s.exports=t.p+"assets/img/carry-deploy.cfe1840c.png"},575:function(s,n,t){"use strict";t.r(n);var a=t(13),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"蓝绿发布与灰度发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#蓝绿发布与灰度发布"}},[s._v("#")]),s._v(" 蓝绿发布与灰度发布")]),s._v(" "),a("p",[a("strong",[s._v("蓝绿发布")]),s._v("，是指同时运行两个版本的应用。在部署时，不停掉老版本，直接部署一套新版本，等新版本运行起来后，将流量切换到新版本上。"),a("strong",[s._v("但是蓝绿部署要求在升级时，同时运行两套程序，对硬件的要求是日常所需的两倍")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("灰度发布")]),s._v("是指在黑与白之间，能够平滑过渡的一种发布方式。AB test就是一种灰度发布方式，让一部分用户继续用A，一部分用户开始用B，如果用户对B没有什么反对意见，那么逐步扩大范围，把所有用户都迁移到B上面来。")]),s._v(" "),a("h2",{attrs:{id:"nginx转发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx转发"}},[s._v("#")]),s._v(" nginx转发")]),s._v(" "),a("p",[s._v("两份代码，分别部署\n通过nginx加权轮询来控制访问百分比（在客户端cookie不存在标识的前提）\n前端引入了sdk（往cookie存入一个随机不重复的标识）\n二次访问的时候，nginx通过对cookie中的唯一标识来返回对应的版本")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" $group "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"default"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$http_cookie "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version=V1.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" # 携带"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v("标志的用户去"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.0")]),s._v("服务器\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" $group server_01"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("$http_cookie "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version=V2.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" # 携带"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v("标志的用户去"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.0")]),s._v("服务器\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" $group server_02"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("缺点")])])]),s._v(" "),a("ol",[a("li",[s._v("只能简单依赖nginx加权轮询百分比来控制流量，全靠前端，无法结合业务做分流")]),s._v(" "),a("li",[s._v("可控性弱，在灰度版本出现问题的时候，只能通过修改nginx配置来让用户回退版本")]),s._v(" "),a("li",[s._v("问题收集能力差，只能等待用户反馈")]),s._v(" "),a("li",[s._v("在客户端cookie被清理掉后，用户需要重新通过nginx的加权轮询进入，有可能被分配到与上一个分配不同的版本")])]),s._v(" "),a("h2",{attrs:{id:"ingress-nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ingress-nginx"}},[s._v("#")]),s._v(" "),a("strong",[s._v("ingress-nginx")])]),s._v(" "),a("p",[s._v("Ingress-nginx一般由三个组件组成：")]),s._v(" "),a("ul",[a("li",[s._v("1）"),a("strong",[s._v("反向代理负载均衡器")]),s._v("：通常以service的port方式运行，接收并按照ingress定义的规则进行转发，常用的有nginx，Haproxy，Traefik等，本文中使用的就是nginx。")]),s._v(" "),a("li",[s._v("2）"),a("strong",[s._v("ingress-nginx-Controller")]),s._v("： 监听APIServer，根据用户编写的ingress规则（编写ingress的yaml文件），动态地去更改nginx服务的配置文件，并且reload重载使其生效，此过程是自动化的（通过lua脚本来实现）。")]),s._v(" "),a("li",[s._v("3）"),a("strong",[s._v("Ingress服务")]),s._v("：将nginx的配置抽象成一个Ingress对象，当用户每添加一个新的服务，只需要编写一个新的ingress的yaml文件即可。")])]),s._v(" "),a("p",[s._v("Ingress-nginx的工作原理：")]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[s._v("1）ingress controller通过和kubernetes api交互，动态的去感知集群中ingress规则变化。")])]),s._v(" "),a("li",[a("p",[s._v("2）然后读取它，按照自定义的规则，规则就是写明了那个域名对应哪个service，生成一段nginx配置。")])]),s._v(" "),a("li",[a("p",[s._v("3）在写到nginx-ingress-controller的pod里，这个Ingress controller的pod里运行着一个Nginx服务，控制器会把生成的nginx配置写入/etc/nginx.conf文件中")])]),s._v(" "),a("li",[a("p",[s._v("4）然后reload一下使配置生效，以此达到分配和动态更新问题。")])])])]),s._v(" "),a("ul",[a("li",[s._v("规则")])]),s._v(" "),a("blockquote",[a("ul",[a("li",[a("p",[s._v("nginx.ingress.kubernetes.io/canary-by-header：如果请求头中包含这里指定的 header 名称，并且值为 always 的话，就将该请求转发给该 Ingress 定义的对应后端服务；如果值为 never 就不转发，可以用于回滚到旧版")])]),s._v(" "),a("li",[a("p",[s._v("nginx.ingress.kubernetes.io/canary-by-header-value:  允许指定请求头的值可以自定义成其它值")])]),s._v(" "),a("li",[a("p",[s._v("nginx.ingress.kubernetes.io/canary-by-header-pattern: 用正则表达式对来匹配请求头的值")])]),s._v(" "),a("li",[a("p",[s._v("nginx.ingress.kubernetes.io/canary-by-cookie:   用于 cookie，同样也是只支持 always 和 never")])]),s._v(" "),a("li",[a("p",[s._v("nginx.ingress.kubernetes.io/canary-weight:   表示 Canary Ingress 所分配流量的比例的百分比，取值范围 [0-100]，比如设置为 10，意思是分配 10% 的流量给 Canary Ingress 对应的后端服务。")])])])]),s._v(" "),a("p",[s._v("支持基于 Header、Cookie 和服务权重这 3 种流量切分的策略，优先顺序如下：canary-by-header -> canary-by-cookie -> canary-weight")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("存在的缺陷")]),s._v("\n相同服务的 Canary Ingress 只能定义一个，所以后端服务最多支持两个版本。"),a("br"),s._v("\nIngress 里必须配置域名，否则不会有效果。"),a("br"),s._v("\n即便流量完全切到了 Canary Ingress 上，旧版服务也还是必须存在，不然会报错。")])]),s._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" networking.k8s.io/v1beta1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Ingress\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx.ingress.kubernetes.io/rewrite-target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /lancelot/$2\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx.ingress.kubernetes.io/use-regex")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx.ingress.kubernetes.io/proxy-body-size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"300M"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("lancelot\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("rules")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pathType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Prefix\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/lancelot(/|$)(.*)"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("backend")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("serviceName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" dw"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("lancelot\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("servicePort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8888")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"nginx-lua-redis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-lua-redis"}},[s._v("#")]),s._v(" "),a("strong",[s._v("nginx + lua + redis")])]),s._v(" "),a("p",[s._v("nginx+lua实现反向代理，获取客户端ip；redis存放ip信息")]),s._v(" "),a("blockquote",[a("p",[s._v("在Openresty中通过ngx_http_lua_module模块的指令access_by_lua_file，解析指定的lua脚本，通过lua脚本获取客户端的IP地址，请求header头中的userId和设备ID，将以上信息在Redis中做比对，如果存在则代理跳转到灰度环境，否则代理跳转到生产环境中。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("server "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  listen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  server_name localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    location "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("set")]),s._v(" $group "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      access_by_lua '\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" ngx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("http_cookie"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v(" \n        then ngx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nettest1"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" ngx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("var"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("group"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nettest"')]),s._v(" end\n      '"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n      proxy_pass http"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("$group"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"nginx-服务端-redis-前端sdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-服务端-redis-前端sdk"}},[s._v("#")]),s._v(" "),a("strong",[s._v("nginx + 服务端 + redis + [前端sdk]")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("我们先把线上的稳定版本称为stable版，本次发布的新功能版本称为beta版")])]),s._v(" "),a("li",[a("p",[s._v("开发人员给stable和beta版本各自启动了nginx服务，在运维层启动了一层入口nginx服务，作为转发")])]),s._v(" "),a("li",[a("p",[s._v("客户端通过域名访问项目，通过请求灰度规则，命中灰度规则后，并给客户端设置cookie作为标识，并将用户标识存放到redis，将用户重定向到指定的版本")])]),s._v(" "),a("li",[a("p",[s._v("灰度规则接口请求的时候，如果已经带有cookie则直接返回对应版本，不存在cookie则去查找redis，redis中存在对应信息则直接返回，如果不存在则走灰度规则识别流程")])]),s._v(" "),a("li",[a("p",[s._v("前端sdk功能：用于控制发起灰度规则请求的时机、回调操作和其他业务操作")])])]),s._v(" "),a("p",[a("strong",[s._v("sdk的使用场景")]),s._v("：")]),s._v(" "),a("blockquote",[a("p",[s._v("项目中需要在特定的时机触发灰度功能，点击某个按钮，或者进入某个页面，比如某些应用是会弹出弹窗，告诉用户有内测版本，是否需要体验，点击同意后才跳转到灰度版本")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果在上线后灰度版本出现严重的问题，需要紧急回退操作 ---\x3e   直接后台关闭灰度功能，清除redis，结束用户的登录会话（实际是清除客户端cookie操作）")])]),s._v(" "),a("li",[a("p",[s._v("指定某个用户进入某个版本 ----\x3e  后台修改redis信息，结束用户的登录会话")])]),s._v(" "),a("li",[a("p",[s._v("指定项目中某个页面才启用灰度  ---\x3e   可以在前端sdk中处理相关逻辑，把相关的页面路径作为名单给前端识别（sdk最好动态引入，sdk放在cdn上）")])])]),s._v(" "),a("p",[a("img",{attrs:{src:t(558),alt:"carry-deploy"}})])])}),[],!1,null,null,null);n.default=e.exports}}]);